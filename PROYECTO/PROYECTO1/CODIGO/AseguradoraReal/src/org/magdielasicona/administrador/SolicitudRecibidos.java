
package org.magdielasicona.administrador;

import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import org.magdielasicona.controlador.Solicitante;
import org.magdielasicona.datos.Login;
import org.magdielasicona.datos.SolicitudSeguro;
import org.magdielasicona.controlador.Asociado;
import org.magdielasicona.controlador.NoAsegurado;

/**
 *
 * @author FRANMAGDIEL_PC
 */
public class SolicitudRecibidos extends javax.swing.JFrame {

    public static Asociado asociado[] = new Asociado[30];
    public static NoAsegurado noAsociado[] = new NoAsegurado[30];

    DefaultTableModel modelo;

    public SolicitudRecibidos() {
        initComponents();
        this.setLocationRelativeTo(null);
        this.setTitle("SOLICITUD DE SEGURO");
        modelo = new DefaultTableModel();
        modelo.addColumn("DPI");
        modelo.addColumn("NOMBRE");
        modelo.addColumn("TELEFONO");
        modelo.addColumn("TIPO");
        modelo.addColumn("DESCRIPCION");
        modelo.addColumn("MONTO");
        modelo.addColumn("POLIZA");
        modelo.addColumn("DEDUCIBLE");
        try{
        insertandoEnTabla();
        }catch(Exception e){}
        this.jTableDatosSolicitante.setModel(modelo);
    }

    public void insertandoEnTabla() {
        int cont = SolicitudSeguro.getInstancia().getContadorBtnSolicitar();
        System.out.println(SolicitudSeguro.getInstancia().getContadorBtnSolicitar());
        String[] tabla = new String[8];
        for (int i = 0; i < cont; i++) {

            tabla[0] = SolicitudSeguro.solicitante[i].getDpiCandidato();
            tabla[1] = SolicitudSeguro.solicitante[i].getNombreCandidato() + " " + SolicitudSeguro.solicitante[i].getApellidoCandidato();
            tabla[2] = SolicitudSeguro.solicitante[i].getTelefonoCandidato();
            tabla[3] = SolicitudSeguro.solicitante[i].getTipoVehiculoCandidato();
            tabla[4] = SolicitudSeguro.solicitante[i].getTipoVehiculoCandidato() + "," + SolicitudSeguro.solicitante[i].getModeloVehiculoCandidato() + "," + SolicitudSeguro.solicitante[i].getMarcaVehiculoCandidato() + "," + SolicitudSeguro.solicitante[i].getLineaVehiculoCandidato() + "," + SolicitudSeguro.solicitante[i].getUsoVehiculoCandidato();
            tabla[5] = String.valueOf(SolicitudSeguro.solicitante[i].getValorVehiculoCandidato());
            tabla[6] = String.valueOf(SolicitudSeguro.solicitante[i].getCostoPrimaCandidato());
            tabla[7] = String.valueOf(SolicitudSeguro.solicitante[i].getCostoDeducibleCandidato());
            modelo.addRow(tabla);
        }

    }

    public void agregarAsociados(Asociado obj) {
        for (int i = 0; i < 30; i++) {
            if (asociado[i] == null) {
                asociado[i] = obj;

                return;
            }
        }
    }

    public void agregarNoAsociados() {
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTableDatosSolicitante = new javax.swing.JTable();
        jButtonAprobar = new javax.swing.JButton();
        jButtonEliminar = new javax.swing.JButton();
        jButtonCancelar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTableDatosSolicitante.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "DPI", "NOMBRE", "TELEFONO", "TIPO", "DESCRIPCION", "MONTO", "POLIZA", "DEDUCIBLE"
            }
        ));
        jTableDatosSolicitante.setRowHeight(25);
        jScrollPane1.setViewportView(jTableDatosSolicitante);

        jButtonAprobar.setFont(new java.awt.Font("DejaVu Sans", 0, 12)); // NOI18N
        jButtonAprobar.setText("Aprobar");
        jButtonAprobar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAprobarActionPerformed(evt);
            }
        });

        jButtonEliminar.setFont(new java.awt.Font("DejaVu Sans", 0, 12)); // NOI18N
        jButtonEliminar.setText("Eliminar");
        jButtonEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEliminarActionPerformed(evt);
            }
        });

        jButtonCancelar.setFont(new java.awt.Font("DejaVu Sans", 0, 12)); // NOI18N
        jButtonCancelar.setText("Cancelar");
        jButtonCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCancelarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 998, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(313, 313, 313)
                        .addComponent(jButtonAprobar, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButtonEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(26, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(48, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(49, 49, 49)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonEliminar)
                    .addComponent(jButtonAprobar)
                    .addComponent(jButtonCancelar))
                .addGap(39, 39, 39))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCancelarActionPerformed
        PanelAdministrador admin = new PanelAdministrador();
        admin.setVisible(true);
        dispose();
    }//GEN-LAST:event_jButtonCancelarActionPerformed

    private void jButtonAprobarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAprobarActionPerformed
        String dato = "";
        int fila = jTableDatosSolicitante.getSelectedRow();
        if (fila != -1) {
            dato = (String) modelo.getValueAt(fila, 0);
            modelo.removeRow(fila);
            System.out.println(dato);
        } else {
            JOptionPane.showMessageDialog(null, "SELECCIONE AL MENOS UNA FILA!!!");
        }

        for (int i = 0; i < SolicitudSeguro.getInstancia().getContadorBtnSolicitar(); i++) {
            if (SolicitudSeguro.solicitante[i].getDpiCandidato().equals(dato)) {
                agregarAsociados(new Asociado(SolicitudSeguro.solicitante[i].getNombreCandidato(), SolicitudSeguro.solicitante[i].getApellidoCandidato(), SolicitudSeguro.solicitante[i].getDpiCandidato(), SolicitudSeguro.solicitante[i].getTelefonoCandidato(), SolicitudSeguro.solicitante[i].getTipoVehiculoCandidato(), SolicitudSeguro.solicitante[i].getUsoVehiculoCandidato(), SolicitudSeguro.solicitante[i].getMarcaVehiculoCandidato(), SolicitudSeguro.solicitante[i].getLineaVehiculoCandidato(), SolicitudSeguro.solicitante[i].getModeloVehiculoCandidato(), SolicitudSeguro.solicitante[i].getValorVehiculoCandidato(), SolicitudSeguro.solicitante[i].getCostoPrimaCandidato(), SolicitudSeguro.solicitante[i].getCostoDeducibleCandidato(), SolicitudSeguro.solicitante[i].getMecanica(), SolicitudSeguro.solicitante[i].getPrecioMecanica(), SolicitudSeguro.solicitante[i].getRepuesto(), SolicitudSeguro.solicitante[i].getPrecioRepuesto(),"",""));
            }
        }
        //borrar dato en solicitante
        for (int i = 0; i <  SolicitudSeguro.getInstancia().getContadorBtnSolicitar(); i++) {
            if (SolicitudSeguro.solicitante[i].getDpiCandidato().equals(dato)) {
                
                SolicitudSeguro.solicitante[i].setDpiCandidato("");
                SolicitudSeguro.solicitante[i].setNombreCandidato("");
                SolicitudSeguro.solicitante[i].setTelefonoCandidato("");
                SolicitudSeguro.solicitante[i].setTipoVehiculoCandidato("");
                SolicitudSeguro.solicitante[i].setCostoDeducibleCandidato(0.00);
                SolicitudSeguro.solicitante[i].setCostoPrimaCandidato(0.00);
                SolicitudSeguro.solicitante[i].setLineaVehiculoCandidato("");
                SolicitudSeguro.solicitante[i].setMarcaVehiculoCandidato("");
                SolicitudSeguro.solicitante[i].setMecanica("");
                SolicitudSeguro.solicitante[i].setModeloVehiculoCandidato("");
                SolicitudSeguro.solicitante[i].setPrecioMecanica("");
                SolicitudSeguro.solicitante[i].setPrecioRepuesto("");
                SolicitudSeguro.solicitante[i].setRepuesto("");
                SolicitudSeguro.solicitante[i].setUsoVehiculoCandidato("");
                SolicitudSeguro.solicitante[i].setValorVehiculoCandidato(0.00);
                SolicitudSeguro.solicitante[i].setApellidoCandidato("");
               
            }
        }
        JOptionPane.showMessageDialog(null, "SE HA APROBADO LA SOLICITUD!!!");
    }//GEN-LAST:event_jButtonAprobarActionPerformed

    private void jButtonEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEliminarActionPerformed
       String dato = "";
        int fila = jTableDatosSolicitante.getSelectedRow();
        if (fila != -1) {
            dato = (String) modelo.getValueAt(fila, 0);
            modelo.removeRow(fila);
            System.out.println(dato);
        } else {
            JOptionPane.showMessageDialog(null, "SELECCIONE AL MENOS UNA FILA!!!");
        }
        for (int i = 0; i < SolicitudSeguro.getInstancia().getContadorBtnSolicitar(); i++) {
            if (SolicitudSeguro.solicitante[i].getDpiCandidato().equals(dato)) {
                
                SolicitudSeguro.solicitante[i].setDpiCandidato("");
                SolicitudSeguro.solicitante[i].setNombreCandidato("");
                SolicitudSeguro.solicitante[i].setTelefonoCandidato("");
                SolicitudSeguro.solicitante[i].setTipoVehiculoCandidato("");
                SolicitudSeguro.solicitante[i].setCostoDeducibleCandidato(0.00);
                SolicitudSeguro.solicitante[i].setCostoPrimaCandidato(0.00);
                SolicitudSeguro.solicitante[i].setLineaVehiculoCandidato("");
                SolicitudSeguro.solicitante[i].setMarcaVehiculoCandidato("");
                SolicitudSeguro.solicitante[i].setMecanica("");
                SolicitudSeguro.solicitante[i].setModeloVehiculoCandidato("");
                SolicitudSeguro.solicitante[i].setPrecioMecanica("");
                SolicitudSeguro.solicitante[i].setPrecioRepuesto("");
                SolicitudSeguro.solicitante[i].setRepuesto("");
                SolicitudSeguro.solicitante[i].setUsoVehiculoCandidato("");
                SolicitudSeguro.solicitante[i].setValorVehiculoCandidato(0.00);
                SolicitudSeguro.solicitante[i].setApellidoCandidato("");
               
            }
        }
        JOptionPane.showMessageDialog(null, "SE HA ELIMINADO LA SOLICITUD!!!");
    }//GEN-LAST:event_jButtonEliminarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SolicitudRecibidos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SolicitudRecibidos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SolicitudRecibidos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SolicitudRecibidos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SolicitudRecibidos().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonAprobar;
    private javax.swing.JButton jButtonCancelar;
    private javax.swing.JButton jButtonEliminar;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableDatosSolicitante;
    // End of variables declaration//GEN-END:variables
}
